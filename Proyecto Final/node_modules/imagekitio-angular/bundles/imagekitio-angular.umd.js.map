{"version":3,"file":"imagekitio-angular.umd.js","sources":["~/imagekitio-angular/src/imagekitio-angular/imagekitio-angular.module.ts","~/imagekitio-angular/src/imagekitio-angular/ik-upload/ik-upload.component.ts","~/imagekitio-angular/src/imagekitio-angular/ik-image/ik-image.component.ts","~/imagekitio-angular/src/imagekitio-angular/imagekit.service.ts"],"sourcesContent":["import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { IkImageComponent } from './ik-image/ik-image.component';\nimport { IkUploadComponent } from './ik-upload/ik-upload.component';\nimport { ImageKitConfiguration, ImagekitService } from './imagekit.service';\nexport class ImagekitioAngularModule {\n/**\n * @param {?} config\n * @return {?}\n */\nstatic forRoot(config: ImageKitConfiguration): ModuleWithProviders {\n    return {\n      ngModule: ImagekitioAngularModule,\n      providers: [\n        {provide: ImageKitConfiguration, useValue: config }\n      ]\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  declarations: [IkUploadComponent, IkImageComponent],\n  imports: [\n  ],\n  exports: [IkUploadComponent, IkImageComponent],\n  providers: [ ImagekitService ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction ImagekitioAngularModule_tsickle_Closure_declarations() {\n/** @type {?} */\nImagekitioAngularModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nImagekitioAngularModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ImagekitService } from '../imagekit.service';\nexport class IkUploadComponent implements OnInit {\n   fileName:string; //required\n   useUniqueFileName:boolean; //optional\n   tags:string; //optional\n   folder:string; //optional\n   isPrivateFile:boolean; //optional\n   customCoordinates:string; //optional\n   responseFields:string; //optional\n   onError: EventEmitter<any> = new EventEmitter();\n   onSuccess: EventEmitter<any> = new EventEmitter();\n   onFileInput: Function;\n  fileToUpload: File = null;\n/**\n * @param {?} imagekit\n */\nconstructor(private imagekit: ImagekitService) { }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\n/**\n * @param {?} e\n * @return {?}\n */\nhandleFileInput(e) {\n    const /** @type {?} */ onError = this.onError;\n    const /** @type {?} */ onSuccess = this.onSuccess;\n    const /** @type {?} */ files = e.target.files;\n    this.fileToUpload = files.item(0);\n    if (this.onFileInput) {\n      this.onFileInput(e);\n      return;\n    }\n    const /** @type {?} */ params = this.getUploadParams(this.fileToUpload, this.fileName, this.useUniqueFileName, this.tags, this.folder, this.isPrivateFile, this.customCoordinates, this.responseFields)\n    const /** @type {?} */ ik = this.imagekit.ikInstance;\n    ik.upload(params, function (err, result) {\n      if (err) {\n        onError.emit(err);\n      } else {\n        onSuccess.emit(result);\n      }\n    });\n  }\n/**\n * @param {?} file\n * @param {?} fileName\n * @param {?=} useUniqueFileName\n * @param {?=} tags\n * @param {?=} folder\n * @param {?=} isPrivateFile\n * @param {?=} customCoordinates\n * @param {?=} responseFields\n * @return {?}\n */\ngetUploadParams(file, fileName, useUniqueFileName?, tags?, folder?, isPrivateFile?, customCoordinates?, responseFields?) {\n    const /** @type {?} */ params:object = {\n      file: file,\n      fileName: fileName,\n    }\n    if (useUniqueFileName !== undefined) {\n      Object.assign(params, { useUniqueFileName: useUniqueFileName });\n    }\n\n    if (folder !== undefined) {\n      Object.assign(params, { folder: folder });\n    }\n\n    if (isPrivateFile !== undefined) {\n      Object.assign(params, { isPrivateFile: isPrivateFile });\n    }\n\n    if (tags !== undefined) {\n      Object.assign(params, { tags: tags });\n    }\n\n    if (customCoordinates !== undefined) {\n      Object.assign(params, { customCoordinates: customCoordinates });\n    }\n\n    if (responseFields !== undefined) {\n      Object.assign(params, { responseFields: responseFields });\n    }\n    return params;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ik-upload',\n  template: `<input type=\"file\" (change)=\"handleFileInput($event)\" />`,\n  providers: [ImagekitService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ImagekitService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'fileName': [{ type: Input, args: ['fileName', ] },],\n'useUniqueFileName': [{ type: Input, args: ['useUniqueFileName', ] },],\n'tags': [{ type: Input, args: ['tags', ] },],\n'folder': [{ type: Input, args: ['folder', ] },],\n'isPrivateFile': [{ type: Input, args: ['isPrivateFile', ] },],\n'customCoordinates': [{ type: Input, args: ['customCoordinates', ] },],\n'responseFields': [{ type: Input, args: ['responseFields', ] },],\n'onError': [{ type: Output },],\n'onSuccess': [{ type: Output },],\n'onFileInput': [{ type: Input },],\n};\n}\n\nfunction IkUploadComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nIkUploadComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIkUploadComponent.ctorParameters;\n/** @type {?} */\nIkUploadComponent.propDecorators;\n/** @type {?} */\nIkUploadComponent.prototype.fileName;\n/** @type {?} */\nIkUploadComponent.prototype.useUniqueFileName;\n/** @type {?} */\nIkUploadComponent.prototype.tags;\n/** @type {?} */\nIkUploadComponent.prototype.folder;\n/** @type {?} */\nIkUploadComponent.prototype.isPrivateFile;\n/** @type {?} */\nIkUploadComponent.prototype.customCoordinates;\n/** @type {?} */\nIkUploadComponent.prototype.responseFields;\n/** @type {?} */\nIkUploadComponent.prototype.onError;\n/** @type {?} */\nIkUploadComponent.prototype.onSuccess;\n/** @type {?} */\nIkUploadComponent.prototype.onFileInput;\n/** @type {?} */\nIkUploadComponent.prototype.fileToUpload;\n/** @type {?} */\nIkUploadComponent.prototype.imagekit;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, AfterViewInit, OnInit, ElementRef, Input, OnChanges } from '@angular/core';\nimport { ImagekitService } from '../imagekit.service';\nexport class IkImageComponent implements AfterViewInit, OnInit, OnChanges {\n   src:string;\n   path:string;\n   urlEndpoint:string;\n   transformation:Array<Object> = [];\n   transformationPosition:string;\n   queryParameters:Object;\n   lqip:any;\n  url = '';\n  lqipUrl = '';\n\n  observer: MutationObserver;\n/**\n * @param {?} el\n * @param {?} imagekit\n */\nconstructor(private el: ElementRef,\nprivate imagekit: ImagekitService) {\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    this.setUrl(this.src, this.path, this.transformation, this.lqip, this.urlEndpoint, this.transformationPosition, this.queryParameters);\n  }\n/**\n * @return {?}\n */\nngOnChanges(): void {\n    this.ngOnInit();\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    const /** @type {?} */ that = this;\n    this.loadImage(this.lqip && this.lqip.active ? this.lqipUrl : this.url);\n    const /** @type {?} */ imageObserver = new IntersectionObserver(function (entry:any, observer) {\n      if (entry[0] && entry[0].isIntersecting) {\n        let /** @type {?} */ image = entry[0].target;\n        that.loadImage(that.url);\n        imageObserver.unobserve(image);\n      }\n    });\n    imageObserver.observe(this.el.nativeElement);\n  }\n/**\n * @param {?=} src\n * @param {?=} path\n * @param {?=} transformation\n * @param {?=} lqip\n * @param {?=} urlEndpoint\n * @param {?=} transformationPosition\n * @param {?=} queryParameters\n * @return {?}\n */\nsetUrl(src?, path?, transformation?, lqip?, urlEndpoint?, transformationPosition?, queryParameters?) {\n    const /** @type {?} */ config = this.getConfigObject(src, path, transformation, transformationPosition, urlEndpoint, queryParameters)\n    this.url = this.imagekit.getUrl(config);\n    if (lqip && lqip.active === true) {\n      this.lqipUrl = this.lqipload(lqip.quality, this.url, this.path);\n    }\n  }\n/**\n * @param {?=} src\n * @param {?=} path\n * @param {?=} transformation\n * @param {?=} transformationPosition\n * @param {?=} urlEndpoint\n * @param {?=} queryParameters\n * @return {?}\n */\ngetConfigObject(src?, path?, transformation?, transformationPosition?, urlEndpoint?, queryParameters?) {\n    const /** @type {?} */ config = {\n      transformation: transformation,\n    };\n    if (urlEndpoint) {\n      config['urlEndpoint'] = urlEndpoint;\n    }\n    if (queryParameters) {\n      config['queryParameters'] = queryParameters;\n    }\n    if (src) {\n      config['src'] = src;\n      config['transformationPosition'] = 'query';\n    } else if (path) {\n      config['path'] = path;\n      if (transformationPosition) {\n        config['transformationPosition'] = transformationPosition;\n      }\n    } else {\n      throw new Error('Missing src / path during initialization!');\n    }\n    return config;\n  }\n/**\n * @param {?} url\n * @return {?}\n */\nloadImage(url:string) {\n    const /** @type {?} */ nativeElement = this.el.nativeElement;\n    const /** @type {?} */ attributes = nativeElement.attributes;\n    const /** @type {?} */ attrsToSet = this.namedNodeMapToObject(attributes);\n    attrsToSet['src'] = url;\n    const /** @type {?} */ image = nativeElement.children[0];\n    this.setElementAttributes(image, attrsToSet);\n  }\n/**\n * @param {?} source\n * @return {?}\n */\nnamedNodeMapToObject(source: NamedNodeMap): any {\n    let /** @type {?} */ target = {};\n    Object.keys(source).forEach(index => {\n      const /** @type {?} */ name = source[index].name;\n      const /** @type {?} */ value = source[index].value;\n      target[name] = value;\n    });\n    return target;\n  };\n/**\n * @param {?} quality\n * @param {?} url\n * @param {?} path\n * @return {?}\n */\nlqipload(quality, url, path) {\n    let /** @type {?} */ lqip = \"\";\n    if (path) {\n      let /** @type {?} */ newUrl = url.split(\"tr:\");\n      if (newUrl[0] === url) {\n        let /** @type {?} */ temp = url.split(\"/\");\n        lqip = `${temp[0]}//${temp[2]}/${temp[3]}/tr:q-${quality}/${temp[4]}`;\n      } else {\n        lqip = `${newUrl[0]}tr:q-${quality}${newUrl[1]}`;\n      }\n    } else {\n      lqip = `${url}?tr=q-${quality}`;\n    }\n    return lqip;\n  }\n/**\n * @param {?} element\n * @param {?} attributesLiteral\n * @return {?}\n */\nsetElementAttributes(element, attributesLiteral) {\n    Object.keys(attributesLiteral).forEach(attrName => {\n        element.setAttribute(attrName, attributesLiteral[attrName]);\n    });\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ik-image',\n  template: `<img src={{src}}>`,\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: ImagekitService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'src': [{ type: Input, args: ['src', ] },],\n'path': [{ type: Input, args: ['path', ] },],\n'urlEndpoint': [{ type: Input, args: ['urlEndpoint', ] },],\n'transformation': [{ type: Input, args: ['transformation', ] },],\n'transformationPosition': [{ type: Input, args: ['transformationPosition', ] },],\n'queryParameters': [{ type: Input, args: ['queryParameters', ] },],\n'lqip': [{ type: Input, args: ['lqip', ] },],\n};\n}\n\nfunction IkImageComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nIkImageComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIkImageComponent.ctorParameters;\n/** @type {?} */\nIkImageComponent.propDecorators;\n/** @type {?} */\nIkImageComponent.prototype.src;\n/** @type {?} */\nIkImageComponent.prototype.path;\n/** @type {?} */\nIkImageComponent.prototype.urlEndpoint;\n/** @type {?} */\nIkImageComponent.prototype.transformation;\n/** @type {?} */\nIkImageComponent.prototype.transformationPosition;\n/** @type {?} */\nIkImageComponent.prototype.queryParameters;\n/** @type {?} */\nIkImageComponent.prototype.lqip;\n/** @type {?} */\nIkImageComponent.prototype.url;\n/** @type {?} */\nIkImageComponent.prototype.lqipUrl;\n/** @type {?} */\nIkImageComponent.prototype.observer;\n/** @type {?} */\nIkImageComponent.prototype.el;\n/** @type {?} */\nIkImageComponent.prototype.imagekit;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\n// import ImageKit from \"imagekit-javascript\";\nconst /** @type {?} */ ImageKit = require(\"imagekit-javascript\");\n// When SDK is built and packed, the path of this file changes, hence static path cannot work\n// const pjson = require(\"../../package.json\");\nconst /** @type {?} */ SDK_VERSION = '1.0.2';\n\nexport interface Lqip {\n  readonly active: boolean;\n  readonly quality: number;\n}\nexport class ImageKitConfiguration {\n  urlEndpoint: string;\n  publicKey: string;\n  authenticationEndpoint?: string;\n  lqip?: Lqip;\n  fileName?: string;\n  tags?: string;\n  useUniqueFileName?: boolean;\n  responseFields?: any;\n  isPrivateFile?: boolean;\n  folder?: string;\n  customCoordinates?: any;\n  sdkVersion?: string;\n}\n\nfunction ImageKitConfiguration_tsickle_Closure_declarations() {\n/** @type {?} */\nImageKitConfiguration.prototype.urlEndpoint;\n/** @type {?} */\nImageKitConfiguration.prototype.publicKey;\n/** @type {?} */\nImageKitConfiguration.prototype.authenticationEndpoint;\n/** @type {?} */\nImageKitConfiguration.prototype.lqip;\n/** @type {?} */\nImageKitConfiguration.prototype.fileName;\n/** @type {?} */\nImageKitConfiguration.prototype.tags;\n/** @type {?} */\nImageKitConfiguration.prototype.useUniqueFileName;\n/** @type {?} */\nImageKitConfiguration.prototype.responseFields;\n/** @type {?} */\nImageKitConfiguration.prototype.isPrivateFile;\n/** @type {?} */\nImageKitConfiguration.prototype.folder;\n/** @type {?} */\nImageKitConfiguration.prototype.customCoordinates;\n/** @type {?} */\nImageKitConfiguration.prototype.sdkVersion;\n}\n\nexport class ImagekitService {\n  _ikInstance: any;\n/**\n * @param {?} configuration\n */\nconstructor(private configuration: ImageKitConfiguration) {\n    (configuration.sdkVersion = `angular-${SDK_VERSION}`),\n      (this._ikInstance = new ImageKit(this.configuration));\n  }\n/**\n * @return {?}\n */\nget ikInstance(): any {\n    return this._ikInstance;\n  }\n/**\n * @param {?} config\n * @return {?}\n */\ngetUrl(config: object): string {\n    const /** @type {?} */ url = this._ikInstance.url(config);\n    return url;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ImageKitConfiguration, },\n];\n}\n\nfunction ImagekitService_tsickle_Closure_declarations() {\n/** @type {?} */\nImagekitService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nImagekitService.ctorParameters;\n/** @type {?} */\nImagekitService.prototype._ikInstance;\n/** @type {?} */\nImagekitService.prototype.configuration;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["NgModule","Input","Output","Component","EventEmitter","ElementRef","Injectable"],"mappings":"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"}
