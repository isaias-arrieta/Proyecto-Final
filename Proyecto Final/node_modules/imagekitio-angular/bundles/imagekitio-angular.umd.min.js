!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define(["exports","@angular/core"],e):e(t["imagekitio-angular"]={},t.ng.core)}(this,function(t,e){"use strict";var i=require("imagekit-javascript"),n=function u(){},r=function(){function t(t){(this.configuration=t).sdkVersion="angular-1.0.2",this._ikInstance=new i(this.configuration)}return Object.defineProperty(t.prototype,"ikInstance",{get:function(){return this._ikInstance},enumerable:!0,configurable:!0}),t.prototype.getUrl=function(t){return this._ikInstance.url(t)},t}();r.decorators=[{type:e.Injectable}],r.ctorParameters=function(){return[{type:n}]};var o=function(){function t(t,e){this.el=t,this.imagekit=e,this.transformation=[],this.url="",this.lqipUrl=""}return t.prototype.ngOnInit=function(){this.setUrl(this.src,this.path,this.transformation,this.lqip,this.urlEndpoint,this.transformationPosition,this.queryParameters)},t.prototype.ngOnChanges=function(){this.ngOnInit()},t.prototype.ngAfterViewInit=function(){var n=this;this.loadImage(this.lqip&&this.lqip.active?this.lqipUrl:this.url);var r=new IntersectionObserver(function(t,e){if(t[0]&&t[0].isIntersecting){var i=t[0].target;n.loadImage(n.url),r.unobserve(i)}});r.observe(this.el.nativeElement)},t.prototype.setUrl=function(t,e,i,n,r,o,s){var a=this.getConfigObject(t,e,i,o,r,s);this.url=this.imagekit.getUrl(a),n&&!0===n.active&&(this.lqipUrl=this.lqipload(n.quality,this.url,this.path))},t.prototype.getConfigObject=function(t,e,i,n,r,o){var s={transformation:i};if(r&&(s.urlEndpoint=r),o&&(s.queryParameters=o),t)s.src=t,s.transformationPosition="query";else{if(!e)throw new Error("Missing src / path during initialization!");s.path=e,n&&(s.transformationPosition=n)}return s},t.prototype.loadImage=function(t){var e=this.el.nativeElement,i=e.attributes,n=this.namedNodeMapToObject(i);n.src=t;var r=e.children[0];this.setElementAttributes(r,n)},t.prototype.namedNodeMapToObject=function(n){var r={};return Object.keys(n).forEach(function(t){var e=n[t].name,i=n[t].value;r[e]=i}),r},t.prototype.lqipload=function(t,e,i){var n="";if(i){var r=e.split("tr:");if(r[0]===e){var o=e.split("/");n=o[0]+"//"+o[2]+"/"+o[3]+"/tr:q-"+t+"/"+o[4]}else n=r[0]+"tr:q-"+t+r[1]}else n=e+"?tr=q-"+t;return n},t.prototype.setElementAttributes=function(e,i){Object.keys(i).forEach(function(t){e.setAttribute(t,i[t])})},t}();o.decorators=[{type:e.Component,args:[{selector:"ik-image",template:"<img src={{src}}>"}]}],o.ctorParameters=function(){return[{type:e.ElementRef},{type:r}]},o.propDecorators={src:[{type:e.Input,args:["src"]}],path:[{type:e.Input,args:["path"]}],urlEndpoint:[{type:e.Input,args:["urlEndpoint"]}],transformation:[{type:e.Input,args:["transformation"]}],transformationPosition:[{type:e.Input,args:["transformationPosition"]}],queryParameters:[{type:e.Input,args:["queryParameters"]}],lqip:[{type:e.Input,args:["lqip"]}]};var s=function(){function t(t){this.imagekit=t,this.onError=new e.EventEmitter,this.onSuccess=new e.EventEmitter,this.fileToUpload=null}return t.prototype.ngOnInit=function(){},t.prototype.handleFileInput=function(t){var i=this.onError,n=this.onSuccess,e=t.target.files;if(this.fileToUpload=e.item(0),this.onFileInput)this.onFileInput(t);else{var r=this.getUploadParams(this.fileToUpload,this.fileName,this.useUniqueFileName,this.tags,this.folder,this.isPrivateFile,this.customCoordinates,this.responseFields);this.imagekit.ikInstance.upload(r,function(t,e){t?i.emit(t):n.emit(e)})}},t.prototype.getUploadParams=function(t,e,i,n,r,o,s,a){var u={file:t,fileName:e};return i!==undefined&&Object.assign(u,{useUniqueFileName:i}),r!==undefined&&Object.assign(u,{folder:r}),o!==undefined&&Object.assign(u,{isPrivateFile:o}),n!==undefined&&Object.assign(u,{tags:n}),s!==undefined&&Object.assign(u,{customCoordinates:s}),a!==undefined&&Object.assign(u,{responseFields:a}),u},t}();s.decorators=[{type:e.Component,args:[{selector:"ik-upload",template:'<input type="file" (change)="handleFileInput($event)" />',providers:[r]}]}],s.ctorParameters=function(){return[{type:r}]},s.propDecorators={fileName:[{type:e.Input,args:["fileName"]}],useUniqueFileName:[{type:e.Input,args:["useUniqueFileName"]}],tags:[{type:e.Input,args:["tags"]}],folder:[{type:e.Input,args:["folder"]}],isPrivateFile:[{type:e.Input,args:["isPrivateFile"]}],customCoordinates:[{type:e.Input,args:["customCoordinates"]}],responseFields:[{type:e.Input,args:["responseFields"]}],onError:[{type:e.Output}],onSuccess:[{type:e.Output}],onFileInput:[{type:e.Input}]};var a=function(){function e(){}return e.forRoot=function(t){return{ngModule:e,providers:[{provide:n,useValue:t}]}},e}();a.decorators=[{type:e.NgModule,args:[{declarations:[s,o],imports:[],exports:[s,o],providers:[r]}]}],a.ctorParameters=function(){return[]},t.IkImageComponent=o,t.IkUploadComponent=s,t.ImagekitioAngularModule=a,t.ɵa=n,t.ɵb=r,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=imagekitio-angular.umd.min.js.map
