{"version":3,"file":"imagekitio-angular.umd.min.js","sources":["~/imagekitio-angular/src/imagekitio-angular/imagekit.service.ts","~/imagekitio-angular/src/imagekitio-angular/ik-image/ik-image.component.ts","~/imagekitio-angular/src/imagekitio-angular/ik-upload/ik-upload.component.ts","~/imagekitio-angular/src/imagekitio-angular/imagekitio-angular.module.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\n// import ImageKit from \"imagekit-javascript\";\nconst ImageKit = require(\"imagekit-javascript\");\n// When SDK is built and packed, the path of this file changes, hence static path cannot work\n// const pjson = require(\"../../package.json\");\nconst SDK_VERSION = '1.0.2';\n\nexport interface Lqip {\n  readonly active: boolean;\n  readonly quality: number;\n}\n\nexport class ImageKitConfiguration {\n  urlEndpoint: string;\n  publicKey: string;\n  authenticationEndpoint?: string;\n  lqip?: Lqip;\n  fileName?: string;\n  tags?: string;\n  useUniqueFileName?: boolean;\n  responseFields?: any;\n  isPrivateFile?: boolean;\n  folder?: string;\n  customCoordinates?: any;\n  sdkVersion?: string;\n}\n\n@Injectable()\nexport class ImagekitService {\n  _ikInstance: any;\n  constructor(private configuration: ImageKitConfiguration) {\n    (configuration.sdkVersion = `angular-${SDK_VERSION}`),\n      (this._ikInstance = new ImageKit(this.configuration));\n  }\n\n  get ikInstance(): any {\n    return this._ikInstance;\n  }\n\n  getUrl(config: object): string {\n    const url = this._ikInstance.url(config);\n    return url;\n  }\n}\n","import { Component, AfterViewInit, OnInit, ElementRef, Input, OnChanges } from '@angular/core';\nimport { ImagekitService } from '../imagekit.service';\n\n@Component({\n  selector: 'ik-image',\n  template: `<img src={{src}}>`,\n})\nexport class IkImageComponent implements AfterViewInit, OnInit, OnChanges {\n  @Input('src') src:string;\n  @Input('path') path:string;\n  @Input('urlEndpoint') urlEndpoint:string;\n  @Input('transformation') transformation:Array<Object> = [];\n  @Input('transformationPosition') transformationPosition:string;\n  @Input('queryParameters') queryParameters:Object;\n  @Input('lqip') lqip:any;\n  url = '';\n  lqipUrl = '';\n\n  observer: MutationObserver;\n\n  constructor(private el: ElementRef, private imagekit: ImagekitService) {\n  }\n\n  ngOnInit(): void {\n    this.setUrl(this.src, this.path, this.transformation, this.lqip, this.urlEndpoint, this.transformationPosition, this.queryParameters);\n  }\n\n  ngOnChanges(): void {\n    this.ngOnInit();\n  }\n\n  ngAfterViewInit() {\n    const that = this;\n    this.loadImage(this.lqip && this.lqip.active ? this.lqipUrl : this.url);\n    const imageObserver = new IntersectionObserver(function (entry:any, observer) {\n      if (entry[0] && entry[0].isIntersecting) {\n        let image = entry[0].target;\n        that.loadImage(that.url);\n        imageObserver.unobserve(image);\n      }\n    });\n    imageObserver.observe(this.el.nativeElement);\n  }\n\n  setUrl(src?, path?, transformation?, lqip?, urlEndpoint?, transformationPosition?, queryParameters?) {\n    const config = this.getConfigObject(src, path, transformation, transformationPosition, urlEndpoint, queryParameters)\n    this.url = this.imagekit.getUrl(config);\n    if (lqip && lqip.active === true) {\n      this.lqipUrl = this.lqipload(lqip.quality, this.url, this.path);\n    }\n  }\n\n  getConfigObject(src?, path?, transformation?, transformationPosition?, urlEndpoint?, queryParameters?) {\n    const config = {\n      transformation: transformation,\n    };\n    if (urlEndpoint) {\n      config['urlEndpoint'] = urlEndpoint;\n    }\n    if (queryParameters) {\n      config['queryParameters'] = queryParameters;\n    }\n    if (src) {\n      config['src'] = src;\n      config['transformationPosition'] = 'query';\n    } else if (path) {\n      config['path'] = path;\n      if (transformationPosition) {\n        config['transformationPosition'] = transformationPosition;\n      }\n    } else {\n      throw new Error('Missing src / path during initialization!');\n    }\n    return config;\n  }\n\n  loadImage(url:string) {\n    const nativeElement = this.el.nativeElement;\n    const attributes = nativeElement.attributes;\n    const attrsToSet = this.namedNodeMapToObject(attributes);\n    attrsToSet['src'] = url;\n    const image = nativeElement.children[0];\n    this.setElementAttributes(image, attrsToSet);\n  }\n\n  namedNodeMapToObject(source: NamedNodeMap): any {\n    let target = {};\n    Object.keys(source).forEach(index => {\n      const name = source[index].name;\n      const value = source[index].value;\n      target[name] = value;\n    });\n    return target;\n  };\n\n  lqipload(quality, url, path) {\n    let lqip = \"\";\n    if (path) {\n      let newUrl = url.split(\"tr:\");\n      if (newUrl[0] === url) {\n        let temp = url.split(\"/\");\n        lqip = `${temp[0]}//${temp[2]}/${temp[3]}/tr:q-${quality}/${temp[4]}`;\n      } else {\n        lqip = `${newUrl[0]}tr:q-${quality}${newUrl[1]}`;\n      }\n    } else {\n      lqip = `${url}?tr=q-${quality}`;\n    }\n    return lqip;\n  }\n\n  setElementAttributes(element, attributesLiteral) {\n    Object.keys(attributesLiteral).forEach(attrName => {\n        element.setAttribute(attrName, attributesLiteral[attrName]);\n    });\n  }\n}\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { ImagekitService } from '../imagekit.service';\n@Component({\n  selector: 'ik-upload',\n  template: `<input type=\"file\" (change)=\"handleFileInput($event)\" />`,\n  providers: [ImagekitService]\n})\nexport class IkUploadComponent implements OnInit {\n  @Input('fileName') fileName:string; //required\n  @Input('useUniqueFileName') useUniqueFileName:boolean; //optional\n  @Input('tags') tags:string; //optional\n  @Input('folder') folder:string; //optional\n  @Input('isPrivateFile') isPrivateFile:boolean; //optional\n  @Input('customCoordinates') customCoordinates:string; //optional\n  @Input('responseFields') responseFields:string; //optional\n  @Output() onError: EventEmitter<any> = new EventEmitter();\n  @Output() onSuccess: EventEmitter<any> = new EventEmitter();\n  @Input() onFileInput: Function;\n  fileToUpload: File = null;\n\n  constructor(private imagekit: ImagekitService) { }\n\n  ngOnInit() {\n  }\n\n  handleFileInput(e) {\n    const onError = this.onError;\n    const onSuccess = this.onSuccess;\n    const files = e.target.files;\n    this.fileToUpload = files.item(0);\n    if (this.onFileInput) {\n      this.onFileInput(e);\n      return;\n    }\n    const params = this.getUploadParams(this.fileToUpload, this.fileName, this.useUniqueFileName, this.tags, this.folder, this.isPrivateFile, this.customCoordinates, this.responseFields)\n    const ik = this.imagekit.ikInstance;\n    ik.upload(params, function (err, result) {\n      if (err) {\n        onError.emit(err);\n      } else {\n        onSuccess.emit(result);\n      }\n    });\n  }\n\n  getUploadParams(file, fileName, useUniqueFileName?, tags?, folder?, isPrivateFile?, customCoordinates?, responseFields?) {\n    const params:object = {\n      file: file,\n      fileName: fileName,\n    }\n    if (useUniqueFileName !== undefined) {\n      Object.assign(params, { useUniqueFileName: useUniqueFileName });\n    }\n\n    if (folder !== undefined) {\n      Object.assign(params, { folder: folder });\n    }\n\n    if (isPrivateFile !== undefined) {\n      Object.assign(params, { isPrivateFile: isPrivateFile });\n    }\n\n    if (tags !== undefined) {\n      Object.assign(params, { tags: tags });\n    }\n\n    if (customCoordinates !== undefined) {\n      Object.assign(params, { customCoordinates: customCoordinates });\n    }\n\n    if (responseFields !== undefined) {\n      Object.assign(params, { responseFields: responseFields });\n    }\n    return params;\n  }\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { IkImageComponent } from './ik-image/ik-image.component';\nimport { IkUploadComponent } from './ik-upload/ik-upload.component';\nimport { ImageKitConfiguration, ImagekitService } from './imagekit.service';\n\n\n@NgModule({\n  declarations: [IkUploadComponent, IkImageComponent],\n  imports: [\n  ],\n  exports: [IkUploadComponent, IkImageComponent],\n  providers: [ ImagekitService ]\n})\nexport class ImagekitioAngularModule {\n\n  static forRoot(config: ImageKitConfiguration): ModuleWithProviders {\n    return {\n      ngModule: ImagekitioAngularModule,\n      providers: [\n        {provide: ImageKitConfiguration, useValue: config }\n      ]\n    };\n  }\n}\n"],"names":["ImageKit","require","ImageKitConfiguration","ImagekitService","configuration","this","sdkVersion","_ikInstance","Object","defineProperty","prototype","get","getUrl","config","url","decorators","type","Injectable","ctorParameters","IkImageComponent","el","imagekit","transformation","lqipUrl","ngOnInit","setUrl","src","path","lqip","urlEndpoint","transformationPosition","queryParameters","ngOnChanges","ngAfterViewInit","that","loadImage","active","imageObserver","IntersectionObserver","entry","observer","isIntersecting","image","target","unobserve","observe","nativeElement","getConfigObject","lqipload","quality","Error","attributes","attrsToSet","namedNodeMapToObject","children","setElementAttributes","source","keys","forEach","index","name","value","newUrl","split","temp","element","attributesLiteral","attrName","setAttribute","Component","args","selector","template","ElementRef","propDecorators","Input","IkUploadComponent","onError","EventEmitter","onSuccess","fileToUpload","handleFileInput","e","files","item","onFileInput","params","getUploadParams","fileName","useUniqueFileName","tags","folder","isPrivateFile","customCoordinates","responseFields","ikInstance","upload","err","result","emit","file","undefined","assign","providers","Output","ImagekitioAngularModule","forRoot","ngModule","provide","useValue","NgModule","declarations","imports","exports"],"mappings":"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"}
